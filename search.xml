<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux 文件的排序、合并和分割</title>
      <link href="/posts/3706206380/"/>
      <url>/posts/3706206380/</url>
      
        <content type="html"><![CDATA[<h2 id="sort命令"><a class="markdownIt-Anchor" href="#sort命令"></a> <code>sort</code>命令</h2><p><code>sort</code> 命令将输入文件看作由多条记录组成的数据流，而记录由可变宽度的字段组成，<em><strong>记录由换行符作为界定符</strong></em>。<code>sort</code>命令与<code>awk</code>一样，可将记录分成多个域进行处理，<em><strong>默认的域分隔符是空格符</strong></em>。<code>sort</code>命令的基本格式为：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort [选项] [输入文件]</span><br></pre></td></tr></tbody></table></figure><h3 id="sort命令的选项"><a class="markdownIt-Anchor" href="#sort命令的选项"></a> <code>sort</code>命令的选项</h3><p>下面是<code>sort</code>命令的选项及其意义：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">-c</td><td style="text-align:center">测试文件是否已经排序。</td></tr><tr><td style="text-align:center">-k</td><td style="text-align:center">指定排序的域。</td></tr><tr><td style="text-align:center">-m</td><td style="text-align:center">合并两个已排序的文件。</td></tr><tr><td style="text-align:center">-n</td><td style="text-align:center">根据数字大小进行排序。</td></tr><tr><td style="text-align:center">-o[输出文件]</td><td style="text-align:center">将输出写到指定文件，相当于将输出重定向到指定为文件。</td></tr><tr><td style="text-align:center">-r</td><td style="text-align:center">将排序结果逆向显示。</td></tr><tr><td style="text-align:center">-t</td><td style="text-align:center">改变域分隔符。</td></tr><tr><td style="text-align:center">-u</td><td style="text-align:center">去除结果中的重复行。</td></tr></tbody></table><h3 id="sort命令的基本用法"><a class="markdownIt-Anchor" href="#sort命令的基本用法"></a> <code>sort</code>命令的基本用法</h3><p><code>sort</code>命令是分域对文件进行排序的，默认的域分隔符是空格符，<code>-t</code>选项可用于设置分隔符。</p><ol><li><p><code>sort</code>命令用<code>-t</code>选项设置分隔符：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用冒号作为域分隔符，注意 -t 与冒号之间是没有分隔符的。</span><br><span class="line">sort -t: stuscort.txt</span><br></pre></td></tr></tbody></table></figure><p><code>sort</code>命令默认根据第一域对数据进行排序，如果第一域相同，再根据第二域进行排序，以此类推。当未指定<code>-t</code>时，分隔符是空格，这时记录内开头与结尾的空格都将被忽略；当<code>-t</code>选项改变分隔符时，空格符变得有意义。如<code>[空格符]:root:[空格符]</code>这条记录，在未指定<code>-t</code>时，这条记录只有一个域<code>:root:</code>，记录前后的空格符都被忽略了；若将<code>-t</code>选项指定为冒号，这条记录就包含了三个域，第一和第三域都是空格符，第二域是<code>:root:</code>;</p></li><li><p><code>sort</code>命令用<code>-k</code>选项指定排序的域号：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 根据第三域对stuscore进行排序</span></span><br><span class="line">sort -t: -k3 stuscore</span><br></pre></td></tr></tbody></table></figure><p>在上例中利用<code>-k</code>选项指定了<code>sort</code>命令根据第三域进行排序，注意<code>-k</code>和<code>3</code>之间也没有空格。如果第三域是数字，<code>sort</code>命令默认也不会以数字大小来排序，而是仍然以字符串的方式进行排序的。</p></li><li><p><code>sort</code>命令用<code>-n</code>选项设置根据数值大小排序：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort -t: -k3n stuscore</span><br></pre></td></tr></tbody></table></figure><p><code>-n</code>选项可以指定根据数字大小进行排序，<code>-n</code>选项不是单独使用的，一般放在域号之后。</p></li><li><p><code>sort</code>命令用<code>-r</code>选项将排序结果逆向：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort -t: -k3rn stuscore</span><br></pre></td></tr></tbody></table></figure><p><code>-r</code>选项用于将排序结果逆向显示。</p></li><li><p><code>sort</code>命令<code>-u</code>选项的用法：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -u选项用于去除排序结果中的重复行</span></span><br><span class="line">sort -t: -u score</span><br></pre></td></tr></tbody></table></figure><p><code>sort</code>命令在文件有未排序的记录时会有提示信息，如果文件已排序，则不会有任何提示信息。</p></li><li><p><code>sort</code>命令<code>-m</code>选项的用法：</p><p><code>-m</code>选项用于将两个排好序的文件合并成一个排好序的文件，在文件合并前他们必须已经排好序。<code>-m</code>选项对未排序的文件进行合并没有任何意义。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort -t: -m stu1 stu2</span><br></pre></td></tr></tbody></table></figure><p><code>-m</code>选项会将两个排好序的文件有序的插入到第二个文件的记录中。</p></li></ol><h2 id="uniq命令"><a class="markdownIt-Anchor" href="#uniq命令"></a> <code>uniq</code>命令</h2><p><code>uniq</code>命令用于去除文本文件中的重复行。<code>uniq</code>命令类似于<code>sort</code>命令的<code>-u</code>选项。不同的地方在于<code>uniq</code>命令只能去除连续的重复行，重复行之间不能夹杂其他的行，而<code>sort</code>命令的<code>-u</code>选项是去除所有的重复行。</p><h3 id="uniq命令的选项"><a class="markdownIt-Anchor" href="#uniq命令的选项"></a> <code>uniq</code>命令的选项</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">-c</td><td style="text-align:center">打印每行在文本中重复出现的次数。</td></tr><tr><td style="text-align:center">-d</td><td style="text-align:center">只显示有重复的记录，每个重复记录只出现一次。</td></tr><tr><td style="text-align:center">-u</td><td style="text-align:center">只显示没有重复的记录。</td></tr></tbody></table><h2 id="join命令"><a class="markdownIt-Anchor" href="#join命令"></a> <code>join</code>命令</h2><p><code>join</code>命令用于实现两个文件中记录的连接操作，连接操作是将两个文件中具有相同域的记录选择出来，再将这些记录所有的域放到一行（包含来自两个文件的所有域）。</p><h3 id="join命令选项及其意义"><a class="markdownIt-Anchor" href="#join命令选项及其意义"></a> <code>join</code>命令选项及其意义</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">-a1或-a2</td><td style="text-align:center">除了显示以共同域进行连接的的结果外，-a1表示还显示第一个文件中没有共同域的记录，-a2则表示显示第二个文件中没有共同域的记录。</td></tr><tr><td style="text-align:center">-i</td><td style="text-align:center">比较域内容时，忽略大小写差异。</td></tr><tr><td style="text-align:center">-o</td><td style="text-align:center">设置结果显示的格式。</td></tr><tr><td style="text-align:center">-t</td><td style="text-align:center">改变域分隔符。</td></tr><tr><td style="text-align:center">-v1或-v2</td><td style="text-align:center">与a选项类似，但是，不显示以共同域进行连接的结果。</td></tr><tr><td style="text-align:center">-1或-2</td><td style="text-align:center">-1用于设置文件1用于连接的域，-2用于设置文件2用于连接的域。</td></tr></tbody></table><p><code>join</code>命令默认显示连接记录在两个文件中的所有域，而且是按顺序来显示的。<code>-o</code>选项用于改变结果显示的格式：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -o选项用于改变结果显示格式，在下面的命令中按第一个文件的第一个域、第二个文件中的第二个域和第一个文件中的第二个域进行显示</span></span><br><span class="line">join -t: -o1.1 2.2 1.2 stu1 stu2</span><br><span class="line"><span class="meta">#</span><span class="bash"> -1 -2选项用于设置文件连接的域,下面的命令按第一个文件的第三个域与第二个文件的第一个域进行连接</span></span><br><span class="line">join -t: -i -1 3 -2 1 stu1 stu2 </span><br></pre></td></tr></tbody></table></figure><p><code>join</code>命令在对两个文件进行连接操作时，两个文件必须都是按域排序好的，按其他域排序是无效的。</p><h2 id="cut命令"><a class="markdownIt-Anchor" href="#cut命令"></a> <code>cut</code>命令</h2><p><code>cut</code>命令用于从标准输入或文本文件中按域或行提取文本。</p><h3 id="cut命令的选项"><a class="markdownIt-Anchor" href="#cut命令的选项"></a> <code>cut</code>命令的选项</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">-c</td><td style="text-align:center">指定提取的字符数或字符范围。</td></tr><tr><td style="text-align:center">-f</td><td style="text-align:center">指定提取的域数或域范围。</td></tr><tr><td style="text-align:center">-d</td><td style="text-align:center">改变域分隔符。</td></tr></tbody></table><p><code>-c</code>选项后跟数字表示字符数或字符范围，共有三种表示方式：</p><ul><li><code>-cn</code>表示第<code>n</code>个字符。</li><li><code>-cn,m</code>表示第<code>n</code>个字符和第<code>m</code>个字符。</li><li><code>-cn-m</code>表示第<code>n</code>个字符到第<code>m</code>个字符。</li></ul><p>由于<code>-c</code>选项是按字符提取文本的，因此，无需使用<code>-d</code>改变域分隔符，但是当使用<code>-f</code>按域提取文本时就需要使用<code>-d</code>改变域分隔符了。</p><h2 id="paste命令"><a class="markdownIt-Anchor" href="#paste命令"></a> <code>paste</code>命令</h2><p><code>paste</code>命令用于将文本文件或标准输出中的内容粘贴到新的文件。</p><h3 id="paste命令的选项"><a class="markdownIt-Anchor" href="#paste命令的选项"></a> <code>paste</code>命令的选项</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">-d</td><td style="text-align:center">默认域分隔符是空格或Tab键，-d用于设置新的域分隔符。</td></tr><tr><td style="text-align:center">-s</td><td style="text-align:center">将每个文件粘贴成一行。</td></tr></tbody></table><h2 id="tar命令"><a class="markdownIt-Anchor" href="#tar命令"></a> <code>tar</code>命令</h2><p><code>tar</code>命令是Linux的归档命令，通俗地说，<code>tar</code>命令实现了Linux系统文件的压缩和解压缩。</p><h3 id="tar命令常用的选项"><a class="markdownIt-Anchor" href="#tar命令常用的选项"></a> <code>tar</code>命令常用的选项</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center"><code>-c</code></td><td style="text-align:center">创建新的包。</td></tr><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:center">为包添加新的文件。</td></tr><tr><td style="text-align:center"><code>-t</code></td><td style="text-align:center">列出包的内容。</td></tr><tr><td style="text-align:center"><code>-u</code></td><td style="text-align:center">更新包中的文件，若包中无此文件，则将该文件添加到包中。</td></tr><tr><td style="text-align:center"><code>-x</code></td><td style="text-align:center">解压缩文件。</td></tr><tr><td style="text-align:center"><code>-f</code></td><td style="text-align:center">使用压缩文件或设备，该选项通常是必选的。</td></tr><tr><td style="text-align:center"><code>-v</code></td><td style="text-align:center">详细报告<code>tar</code>处理文件的信息。</td></tr><tr><td style="text-align:center"><code>-z</code></td><td style="text-align:center">用<code>gzip</code>压缩和解压缩文件，若加上此选项创建压缩包，那么解压缩时也需要加上此选项。</td></tr></tbody></table><p>在Linux 系统下有很多种压缩包格式，如<code>.tar</code>、<code>.gz</code>、<code>.tar.gz</code>、<code>.tgz</code>和<code>.Z</code>，利用<code>tar</code>命令解压缩时，常用的有两条命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 解压缩非gzip格式的压缩包</span><br><span class="line">tar -xvf 压缩包名称</span><br><span class="line"># 解压gzip格式的压缩包</span><br><span class="line">tar -zxvf 压缩包名称</span><br></pre></td></tr></tbody></table></figure><p><code>gzip</code>命令是Linux系统中常用的压缩工具，他可以对<code>tar</code>命令创建的压缩包进行压缩</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 三剑客之sed</title>
      <link href="/posts/3950104678/"/>
      <url>/posts/3950104678/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p><code>sed</code>是一个非交互式流式编辑器，它可对文本文件和标准输入进行编辑(标准输入可以是来自键盘、文件重定向、字符串、变量、甚至是来自管道的文本)。</p><p><code>sed</code>从文本的一个文本行或标准输入中读取数据，将其复制到缓冲区，然后读取命令行或脚本的第一个命令，对此命令要求的行号进行编辑，重复此过程，直到命令行或脚本中的所有命令都执行完毕。</p><p><code>sed</code> 只是对缓冲区中原始文件的副本进行编辑，并<strong>不编辑</strong>原始文件。要保存改动的内容需要重定向到另外一个文件中：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [option] 'sed command' input-file &gt; result-file</span><br></pre></td></tr></tbody></table></figure><h2 id="调用方式"><a class="markdownIt-Anchor" href="#调用方式"></a> 调用方式</h2><ol><li>在<code>shell</code> 命令行中输入命令调用<code>sed</code>，格式为：</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [option] 'sed command' file-name</span><br></pre></td></tr></tbody></table></figure><p>在调用时，需要将<code>sed</code>命令用单引号引起来。</p><ol start="2"><li>将<code>sed</code>命令插入到脚本中调用时，需要添加参数<code>-f</code>,格式为：</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [option] -f sed脚本文件 输入文件</span><br></pre></td></tr></tbody></table></figure><h2 id="sed-命令解析"><a class="markdownIt-Anchor" href="#sed-命令解析"></a> <code>sed</code> 命令解析</h2><h3 id="常用选项"><a class="markdownIt-Anchor" href="#常用选项"></a> 常用选项</h3><p><code>sed</code> 常用选项有三个：</p><ul><li><code>-n</code>: 不打印所有行到标准输出。</li><li><code>-e</code>: 表示将下一个字符串解析为<code>sed</code>编辑命令,如果只传递一个编辑命令给<code>sed</code>，则<code>-e</code>选项可以忽略。</li><li><code>-f</code>: 表示正在调用<code>sed</code>脚本文件。</li></ul><p><code>sed</code> 命令通常由定位文本行和<code>sed</code>编辑命令两部分组成。</p><h3 id="sed定位文本的方法"><a class="markdownIt-Anchor" href="#sed定位文本的方法"></a> <code>sed</code>定位文本的方法</h3><p><code>sed</code>提供两种定位文本的方法：</p><ul><li>使用行号，指定一行，或指定行号范围。</li><li>使用正则表达式。</li></ul><p>下面为<code>sed</code>命令定位文本的方法：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">x</td><td style="text-align:center">x为指定行号</td></tr><tr><td style="text-align:center">x,y</td><td style="text-align:center">指定x到y的行号范围</td></tr><tr><td style="text-align:center">/pattern/</td><td style="text-align:center">查询包含模式的行</td></tr><tr><td style="text-align:center">/pattern/pattern/</td><td style="text-align:center">查询包含两个模式的行</td></tr><tr><td style="text-align:center">/pattern/,x</td><td style="text-align:center">从与pattern的匹配行到x号行之间的行</td></tr><tr><td style="text-align:center">x,/pattern/</td><td style="text-align:center">从x号行到与pattern的匹配行之间的行</td></tr><tr><td style="text-align:center">x,y!</td><td style="text-align:center">查询不包括x和y行号之间的行</td></tr></tbody></table><h3 id="sed编辑命令"><a class="markdownIt-Anchor" href="#sed编辑命令"></a> <code>sed</code>编辑命令</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">p</td><td style="text-align:center">打印匹配行</td></tr><tr><td style="text-align:center">=</td><td style="text-align:center">打印文件行号</td></tr><tr><td style="text-align:center">a\</td><td style="text-align:center">在定位行号之后追加文本信息</td></tr><tr><td style="text-align:center">i\</td><td style="text-align:center">在定位行号之前插入文本信息</td></tr><tr><td style="text-align:center">d</td><td style="text-align:center">删除定位行</td></tr><tr><td style="text-align:center">c\</td><td style="text-align:center">用新文本替换定位文本</td></tr><tr><td style="text-align:center">s</td><td style="text-align:center">使用替换模式替换相应模式</td></tr><tr><td style="text-align:center">r</td><td style="text-align:center">从另外一个文件中读取文本</td></tr><tr><td style="text-align:center">w</td><td style="text-align:center">将文本写入到一个文件</td></tr><tr><td style="text-align:center">y</td><td style="text-align:center">逐个替换字符</td></tr><tr><td style="text-align:center">q</td><td style="text-align:center">第一个模式匹配完成后退出</td></tr><tr><td style="text-align:center">l</td><td style="text-align:center">显示与八进制ASCII码等价的控制字符</td></tr><tr><td style="text-align:center">{}</td><td style="text-align:center">在定位行执行的命令组</td></tr><tr><td style="text-align:center">n</td><td style="text-align:center">读取下一个输入行，用下一个命令处理新的行</td></tr><tr><td style="text-align:center">h</td><td style="text-align:center">将pattern缓冲区的文本复制到hold缓冲区</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">将pattern缓冲区的文本追加到hold缓冲区</td></tr><tr><td style="text-align:center">x</td><td style="text-align:center">将pattern缓冲区和hold缓冲区的内容互换</td></tr><tr><td style="text-align:center">g</td><td style="text-align:center">将hold缓冲区的内容复制到pattern缓冲区</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">将hold缓冲区的内容追加到pattern缓冲区</td></tr></tbody></table><h2 id="sed命令例子"><a class="markdownIt-Anchor" href="#sed命令例子"></a> <code>sed</code>命令例子</h2><ol><li><code>-n</code> 选项</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># -n选项表示"不打印"是指: 不打印sed编辑对象的全部内容，将-n去掉就会打印文件内的全部内容</span><br><span class="line">sed -n '1p' input </span><br><span class="line"></span><br><span class="line"># 打印input文件的3~6行</span><br><span class="line">sed -n '3,6p' input</span><br><span class="line"></span><br><span class="line"># sed命令打印匹配模式行</span><br><span class="line">sed -n '/certificate/p' input</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><code>-e</code>选项</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 打印内容及行号，传递两个编辑命令给sed</span><br><span class="line">sed -n -e '/Certificate/p' -e '/Certificate/=' input</span><br></pre></td></tr></tbody></table></figure><p><em><strong>注意：<code>sed</code>不支持同时带多个编辑命令的用法，如：</strong></em></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n 'Certificate/p=' input</span><br></pre></td></tr></tbody></table></figure><p><em><strong>上面这种用法是错误的！！！</strong></em></p><p><code>sed</code>带多个编辑命令格式有下面几种</p><ul><li><code>sed [option] -e 'edit command 1' -e 'edit command 2 ...'</code></li><li><code>sed -n '/Certificate/{p;=}' input</code></li><li><code>sed 's/globus/GLOBUS/; s/seugrid/SEUGRID/' input</code></li></ul><ol start="3"><li><code>-f</code> 选项</li></ol><p><code>-f</code>选项只有调用<code>sed</code>脚本时才起作用，追加文本、插入文本、修改文本、删除文本和替换文本等功能往往需要几条<code>sed</code>命令来完成，所以会将这些命令写入到<code>sed</code>脚本文件中，然后调用<code>sed</code>脚本来完成。</p><p>追加文本的例子：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># append.sed</span><br><span class="line">#!/bin/sed -f</span><br><span class="line">/file:/a\    # a\ 表示此处换行添加文本</span><br><span class="line"># 需要添加的内容</span><br><span class="line">We append a new line.</span><br><span class="line">We append another line.</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li><p><code>sed</code>编辑命令</p><ul><li><p><code>a\</code>：将指定文本的一行或多行追加到指定行后面。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 命令格式为：sed '指定地址a\追加文本' 输入文件</span><br><span class="line"># 上面指定地址用/pattern/或者行号的形式给出，用于定位新文本的追加位置,sed对a\后的文本进行追加操作</span><br><span class="line">sed '/file:/a\We append a new line.' input</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>i\</code>：插入文本和追加文本类似区别仅在于追加文本是在匹配行的后面插入，而插入文本是在匹配行的前面插入。</p></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!#/bin/sed -f</span><br><span class="line">/file:/i\ # i\表示此处换行插入文本</span><br><span class="line">We insert a new line.</span><br></pre></td></tr></tbody></table></figure><ul><li><code>c\</code>修改文本是指将所匹配的文本行里用心文本替代。</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sed -f </span><br><span class="line">/file:/c\ # c\表示此处换行修改文本</span><br><span class="line">We modify this line.</span><br></pre></td></tr></tbody></table></figure><ul><li><code>d</code> 删除文本</li></ul><p><code>sed</code>删除文本命令可以指定行或者指定行范围进行删除。</p><p><em><strong>注意：<code>sed</code>编辑命令中删除操作符号是<code>d</code>，后面没有<code>\</code>符号。</strong></em></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># sed 命令删除第一行</span><br><span class="line">sed '1d' input</span><br><span class="line"></span><br><span class="line"># sed命令删除最后一行</span><br><span class="line">sed '$d' input</span><br><span class="line"></span><br><span class="line"># 删除指定范围内所有的行</span><br><span class="line">sed '1,10d' input</span><br><span class="line"></span><br><span class="line"># 删除第5行到最后一行</span><br><span class="line">sed '5,$d' input</span><br><span class="line"></span><br><span class="line"># 删除与pattern匹配的行</span><br><span class="line">sed '/[Cc][Ee][Rr][Tt][Ii][Ff][Ii][Cc][Aa][Tt][Ee]/d' input</span><br></pre></td></tr></tbody></table></figure><ul><li><code>s</code>替换文本</li><li>替换文本与修改文本之间的区别在于：<em><strong>替换文本可以替换一个字符串，而修改文本是对整行进行修改</strong></em></li></ul><p>替换文本的格式为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s/被替换的字符串/新字符串/[替换选项]</span><br></pre></td></tr></tbody></table></figure><p>替换选项及其意义:</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">g</td><td style="text-align:center">表示替换文本中所有出现被替换字符串之处</td></tr><tr><td style="text-align:center">p</td><td style="text-align:center">与-n选项结合,只打印替换行</td></tr><tr><td style="text-align:center">w 文件名</td><td style="text-align:center">表示将输出定向到一个文件</td></tr></tbody></table><p><code>P</code>选项：默认情况下，<code>sed</code>的<code>s</code>命令将替换后的全部文本都输出，如果只要求打印替换行，需要结合使用<code>-n</code>和<code>p</code>选项，命令格式如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n 's/被替换的字符串/新字符串/p' 输入文件</span><br></pre></td></tr></tbody></table></figure><p>上述命令如果缺少p选项,将不打印任何内容,<code>p</code>选项的官方文档解释是：使<code>-n</code>无效：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 1.不加-n和p选项,结果为:显示替换后文本的所有内容</span><br><span class="line"># 2.添加-n和p选项，结果为:仅显示被替换的行</span><br><span class="line"># 3.只添加-n参数,未添加p选项，结果为：不打印任何内容</span><br><span class="line"># 4.省略参数-n，只使用p选项,结果为：打印所有行，且匹配行重复打印。</span><br></pre></td></tr></tbody></table></figure><p><code>sed</code>替换命令在不带<code>g</code>选项时，对某行的第一处匹配关键字进行替换后就跳转到下一匹配行进行操作。而<code>g</code>选项使得<code>sed</code>替换命令对某行中所有匹配的关键字都进行了替换。所以只有当被替换字符串在某行出现两次以上时，<code>g</code>选项才发挥作用。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sed替换命令w选项的用法</span><br><span class="line"># 将seu字符串改为njue，并将结果写入output文件</span><br><span class="line">sed -n 's/seu/njue/w output' input</span><br></pre></td></tr></tbody></table></figure><ul><li><p><code>sed</code>替换文本中经常使用的<code>&amp;</code>符号。</p><p><code>&amp;</code>符号可用来保存被替换的字符串以供调用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将seu用圆括号括起来</span><br><span class="line">sed -n 's/seu/(&amp;)pg' input</span><br><span class="line"># 等价于</span><br><span class="line">sed -n 's/seu/(seu)/pg' input</span><br></pre></td></tr></tbody></table></figure></li><li><p>写入一个新文件</p></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 指定地址 w 文件名</span><br><span class="line"># 将1~5行写入output文件</span><br><span class="line">sed -n '1,5 w output' input</span><br><span class="line"></span><br><span class="line"># 将与globus关键字匹配的行写入output文件</span><br><span class="line">sed -n '/globus/w output' input</span><br></pre></td></tr></tbody></table></figure><ul><li>从文件中读文本</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在与Certificate匹配的行后读入otherfile文件</span><br><span class="line">sed '/Certificate/r otherfile' input</span><br></pre></td></tr></tbody></table></figure><ul><li>退出命令</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 打印input文件的前5行</span><br><span class="line">sed '5 q' input</span><br><span class="line"># 查找任意字符后跟r字符，再跟0个或多个任意字符的字符串,这种情况会匹配全部字符串</span><br><span class="line">sed -n '/.r.*/p' input</span><br><span class="line"></span><br><span class="line"># 匹配第一个字符串后立刻退出</span><br><span class="line">sed '/.r.*/q' input</span><br></pre></td></tr></tbody></table></figure><ul><li>变换命令</li></ul><p><code>sed</code>命令的<code>y</code>选项表示字符串变换，他将一系列的字符串变换为相应的字符，<code>y</code>选项是对字符的逐个处理，他的基本格式是：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed 'y/被变换的字符序列/变换的字符序列' 输入文件</span><br></pre></td></tr></tbody></table></figure><p><code>sed</code>命令的<code>y</code>选项要求被变换的字符序列和变换的字符序列等长，否则会报错。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将input文件中的1变换为A、2变换为B、3变换为C、4变换为D、5变换为E</span><br><span class="line">sed 'y/12345/ABCDE/' input</span><br><span class="line"></span><br><span class="line"># 将fmj三个字符变换为大写</span><br><span class="line">sed 'y/fmj/FMJ/' input</span><br></pre></td></tr></tbody></table></figure><ul><li>显示控制字符</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sed 显示控制字符</span><br><span class="line"># 表示用正则表达式'1,$'表示从第一行到最后一行,各系统的控制字符的显示值可能不同</span><br><span class="line">sed -n '1, $l' control</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>sed</code>文本定位的一组例子</p><ul><li>匹配元字符：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 匹配字符中包含元字符时，需要用转义字符"\"屏蔽其特殊意义</span><br><span class="line">sed -n '/\./p' input</span><br><span class="line">sed -n '/\$/p' input</span><br></pre></td></tr></tbody></table></figure><ul><li><p>使用元字符进行匹配</p><p><code>sed</code> 命令可以灵活使用正则表达式的元字符进行匹配。<code>$</code>在<code>sed</code>命令中表示最后一行：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># sed结合$符号匹配最后一行</span><br><span class="line">sed -n '$p' input</span><br><span class="line"></span><br><span class="line"># sed基本编辑命令也可以放到引号外面</span><br><span class="line">sed -n '$'p input</span><br><span class="line"></span><br><span class="line"># 用.和*号匹配任意字符</span><br><span class="line">sed -n '/.*bus/p' input </span><br></pre></td></tr></tbody></table></figure></li><li><p><code>!</code>符号表示取反, <code>x,y!</code>表示匹配不在<code>x</code>和<code>y</code>行号范围内的行。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n '2,10!p' input</span><br></pre></td></tr></tbody></table></figure><p><code>x!</code>表示匹配除了<code>x</code>行号外的所有行,但是,<code>！</code>符号不能用于关键字匹配,如无法表示不与/pattern/匹配的行。</p></li><li><p>使用行号与关键字匹配限定行范围</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># sed 命令使用行号与关键字匹配限定行范围</span><br><span class="line"></span><br><span class="line"># 打印与seugrid的匹配行到最后一行</span><br><span class="line">sed -n '/seugrid/,$p' input</span><br><span class="line"></span><br><span class="line"># 打印第三行到与Certificate的匹配行</span><br><span class="line">sed -n '3,/Certificate/p' input</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><h3 id="sed高级编辑命令的一组例子"><a class="markdownIt-Anchor" href="#sed高级编辑命令的一组例子"></a> <code>sed</code>高级编辑命令的一组例子</h3><ol><li>处理匹配行的下一行</li></ol><p><code>sed</code>编辑命令<code>n</code>的意义是读取下一个输入行，用<code>n</code>后面的一个命令处理该行，由于此时通常有多个编辑命令，所以，编辑命令<code>n</code>需要与<code>{}</code>符号结合使用。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sed n编辑命令的用法</span><br><span class="line"># 将与certificate匹配的下一行中的ll替换成99 </span><br><span class="line">sed '/certificate/{n;s/ll/99/;}' input</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><code>sed</code>缓冲区的处理</li></ol><p><code>sed</code>有两种缓冲区：模式缓冲区(Pattern Buffer) 和保持缓冲区(Hold Buffer)，一般操作的是Pattern Buffer，<code>sed</code>的一些命令可以操作Hold Buffer。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -e '/Subject/h' -e '/seugrid/x' -e '$G' input</span><br><span class="line"># 上面命令中第一个-e选项后的编辑命令将Subject关键字的匹配行写入Hold Buffer中</span><br><span class="line"># 第二个-e选项后的编辑命令是遇见seugrid关键字的匹配行时，将Hold Buffer中的内容输出，并将seugrid关键字的匹配行写入Hold Buffer</span><br><span class="line"># 第三个-e选项后的编辑命令表示到最后一行时（用$进行匹配），将Hold Buffer中的内容追加到pattern Buffer中。</span><br></pre></td></tr></tbody></table></figure><p><code>h</code>和<code>H</code>、<code>g</code>和<code>G</code>是两组对应的命令，<code>h</code>和<code>H</code>命令是Pattern Buffer替换掉Hold Buffer的内容，不过<code>h</code>是副本，即将Hold Buffer的旧内容覆盖掉，而<code>H</code>是追加，即在Hold Buffer的旧内容的基础上，增加新的内容。</p><p><code>g</code>和<code>G</code>命令是Hold Buffer内容替换Pattern Buffer内容，同理<code>g</code>是副本,<code>G</code>是追加。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贝索斯的酷文化</title>
      <link href="/posts/2297297103/"/>
      <url>/posts/2297297103/</url>
      
        <content type="html"><![CDATA[<p>我觉得我中的Amazon和《Rework》的毒，也希望自己是一个非常酷的人。下面是一些相关的Cool文化，把他们写在这里：</p><ul><li>Rudeness is not cool. 野蛮不酷</li><li>Defeating tiny guys is not cool. 打败弱者不酷</li><li>Close-following is not cool.  跟随他人不酷</li><li>Young is cool. 年轻很酷</li><li>Risk taking is cool. 冒险很酷</li><li>Winning is cool. 胜利很酷</li><li>Polite is cool. 有礼貌很酷</li><li>Defeating bigger, unsympathetic guys is cool. 打败强大的、不值得同情的家伙很酷</li><li>Inventing is cool. 创新很酷</li><li>Explorers are cool. 开拓很酷</li><li>Conquerors are not cool. 做征服者不酷</li><li>Obsessing over competitors is not cool. 关注竞争对手不酷</li><li>Empowering others is cool. 帮助他人很酷</li><li>Capturing all the value only for the company is not cool. 复制他人不哭</li><li>Leadership is cool. 引领他人很酷</li><li>Conviction is cool. 有坚定的信仰很酷</li><li>Straightforwardness is cool. 直率真诚很酷</li><li>Pandering to the crowd is not cool. 迎合大众不酷</li><li>Hypocrisy is not cool. 虚假不酷</li><li>Authenticity is cool. 诚实很酷</li><li>Thinking big is cool. 着眼长远很酷</li><li>The unexpected is cool.  意想不到很酷</li><li>Missionaries are cool. 传教士很酷</li><li>Mercenaries are not cool. 雇佣兵不酷</li></ul><p>就算摔倒，也要酷酷的爬起来！！！</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
          <category> 闲聊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
